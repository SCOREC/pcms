# definitions for the NAG compiler family

MPFC ?= nagfor
MPCC ?= mpiicc
MPCXX ?= mpiicpc

#abort if no valid NAG compiler is found
cmd=$(shell basename "`which $(MPFC) 2>/dev/null`")
ifneq ($(cmd),$(MPFC))
$(warning no NAG compiler found)
endif

FC ?= nagfor
CC ?= icc
CXX ?= icpc

FFLAGS+=-D__NAG__
KIND_FFLAG = -kind=byte

SET_FORTRAN_STANDARD = -f2008 $(KIND_FFLAG)
PREPROC_FLAG = -cpp
ONLY_PREPROCESS = -E -P

DEBUG_TRACEBACK = -gline
DEBUG_NOUNUSED = -w=unused
DEBUG_NOSURPRISING =
DEBUG_WARN = -C -Warn=allocation
DEBUG_RUNTIME_CHECK = -C=all -C=undefined
DEBUG_SANITIZE =
DEBUG_FFLAGS = $(DEBUG_TRACEBACK) $(DEBUG_RUNTIME_CHECK) $(DEBUG_WARN) $(DEBUG_NOSURPRISING)
#DEBUG_CFLAGS = $(DEBUG_FFLAGS)

ifeq ($(DEBUG),noopt)
 DEBUG_FFLAGS += -gline -O0
endif

ifeq ($(CHIP),Core2)
 CHIP_OPT =
endif
ifeq ($(CHIP),Magny-Cours)
 CHIP_OPT =
endif
ifeq ($(CHIP),Nehalem)
 CHIP_OPT =
endif
ifeq ($(CHIP),SandyBridge)
 CHIP_OPT =
endif
ifeq ($(CHIP),Haswell)
 CHIP_OPT =
endif
ifeq ($(CHIP),skylake)
 CHIP =
endif
ifeq ($(CHIP),SkyLake)
 CHIP_OPT =
endif


OPTLEVEL ?= 3
OPT_FFLAGS = -O$(OPTLEVEL) $(CHIP_OPT)
PRODRUN_FFLAGS = $(OPT_FFLAGS)
OPENMP_FFLAGS = -openmp

SYMBOL_FFLAGS += -g
SYMBOL_CFLAGS += -g

REPORT_FFLAGS =

DOUBLE_PRECISION_FFLAGS = -r8
MODDIR_FFLAGS = -I$(OBJDIR)
